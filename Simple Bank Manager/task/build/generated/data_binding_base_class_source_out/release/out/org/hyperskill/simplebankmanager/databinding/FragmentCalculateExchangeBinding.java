// Generated by view binder compiler. Do not edit!
package org.hyperskill.simplebankmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.hyperskill.simplebankmanager.R;

public final class FragmentCalculateExchangeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText calculateExchangeAmountEditText;

  @NonNull
  public final Button calculateExchangeButton;

  @NonNull
  public final TextView calculateExchangeDisplayTextView;

  @NonNull
  public final Spinner calculateExchangeFromSpinner;

  @NonNull
  public final TextView calculateExchangeLabelFromTextView;

  @NonNull
  public final TextView calculateExchangeLabelToTextView;

  @NonNull
  public final Spinner calculateExchangeToSpinner;

  private FragmentCalculateExchangeBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText calculateExchangeAmountEditText, @NonNull Button calculateExchangeButton,
      @NonNull TextView calculateExchangeDisplayTextView,
      @NonNull Spinner calculateExchangeFromSpinner,
      @NonNull TextView calculateExchangeLabelFromTextView,
      @NonNull TextView calculateExchangeLabelToTextView,
      @NonNull Spinner calculateExchangeToSpinner) {
    this.rootView = rootView;
    this.calculateExchangeAmountEditText = calculateExchangeAmountEditText;
    this.calculateExchangeButton = calculateExchangeButton;
    this.calculateExchangeDisplayTextView = calculateExchangeDisplayTextView;
    this.calculateExchangeFromSpinner = calculateExchangeFromSpinner;
    this.calculateExchangeLabelFromTextView = calculateExchangeLabelFromTextView;
    this.calculateExchangeLabelToTextView = calculateExchangeLabelToTextView;
    this.calculateExchangeToSpinner = calculateExchangeToSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalculateExchangeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalculateExchangeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calculate_exchange, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalculateExchangeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calculateExchangeAmountEditText;
      EditText calculateExchangeAmountEditText = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeAmountEditText == null) {
        break missingId;
      }

      id = R.id.calculateExchangeButton;
      Button calculateExchangeButton = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeButton == null) {
        break missingId;
      }

      id = R.id.calculateExchangeDisplayTextView;
      TextView calculateExchangeDisplayTextView = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeDisplayTextView == null) {
        break missingId;
      }

      id = R.id.calculateExchangeFromSpinner;
      Spinner calculateExchangeFromSpinner = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeFromSpinner == null) {
        break missingId;
      }

      id = R.id.calculateExchangeLabelFromTextView;
      TextView calculateExchangeLabelFromTextView = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeLabelFromTextView == null) {
        break missingId;
      }

      id = R.id.calculateExchangeLabelToTextView;
      TextView calculateExchangeLabelToTextView = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeLabelToTextView == null) {
        break missingId;
      }

      id = R.id.calculateExchangeToSpinner;
      Spinner calculateExchangeToSpinner = ViewBindings.findChildViewById(rootView, id);
      if (calculateExchangeToSpinner == null) {
        break missingId;
      }

      return new FragmentCalculateExchangeBinding((ConstraintLayout) rootView,
          calculateExchangeAmountEditText, calculateExchangeButton,
          calculateExchangeDisplayTextView, calculateExchangeFromSpinner,
          calculateExchangeLabelFromTextView, calculateExchangeLabelToTextView,
          calculateExchangeToSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
